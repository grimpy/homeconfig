
autoload zmv
alias mmv='noglob zmv -W'

# For giggles
alias du="du -hcs"
alias df="df -h"

alias ls="ls --color=auto"
alias la="ls --color=always -a"
alias ll="ls --color=always -l"
alias lla="ls --color=always -la"
alias lal="ls --color=always -la"

# cd stuff
alias .="cd .."
alias ..="cd ../.."
alias ...="cd ../../.."
alias ....="cd ../../../.."

alias cdr="cd \$vcs_info_msg_1_"

alias tmux="tmux -2"

#rsa stuff
alias scpresume="rsync -Pazhv"
alias git="hub"
alias mosh="mosh --predict=experimental"
alias wget="wget --content-disposition"
alias dd="dd status=progress"

alias grep="grep --colour=auto"


function v(){
    vimbin="vim"
    if [ -z "$@" ] ; then
        $vimbin -c "normal '0";
        return 0;
    fi
    array=("${(s/:/)@}")
    if [ ! -e "${array[1]}" ]; then
        array[1]=$(which ${array[1]})
    fi
    if [ -z "${array[2]}" ]; then
        array[2]="0"
    fi
    $vimbin "${array[1]}" "+${array[2]}"
}

function wd() {
    source ~/.zsh.d/wd/wd.sh
}

function pjson() {
    python -m json.tool $1 | pygmentize -l json
}

function pvdd () {
  pv ${1} | sudo dd of=${2} bs=1M conv=fdatasync oflag=dsync
}


function pacaur(){
    /usr/bin/pacaur $*
    hash -r
}

function yay(){
    /usr/bin/yay $*
    hash -r
}

function apt-get(){
    /usr/bin/apt-get $*
    hash -r
}

function zfload(){
    autoload -U zfinit
    zfinit
    cmd="zf$1"
    shift
    $cmd $*
}

function ownedby(){
    if [ -e "$*" ]; then
        filename="$*"
    else
        filename=$(which "$*")
    fi
    pacman -Qo $filename
}

function countdown(){
   date1=$((`date +%s` + $1)); 
   while [ "$date1" -ge `date +%s` ]; do 
     echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
     sleep 0.1
   done
   echo -e '\a'
}
function stopwatch(){
  date1=`date +%s`; 
   while true; do 
    echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r"; 
    sleep 0.1
   done
}

function encrypt() {
    openssl aes-256-cbc -a -salt -in "$1" -out "$1.enc"
}

function decrypt() {
    openssl aes-256-cbc -d -a -in "$1" -out "$1.decrypt"
}

function dbash() {
    local name=$1
    shift
    docker exec -e AYSBRANCH -e JSBRANCH -e OVCBRANCH -ti $name bash
}

function dssh() {
    local name=$1
    shift
    dip=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $name)
    ssh -A -o UserknownHostsFile=/dev/null -o StrictHostKeyChecking=no root@$dip $@
}

